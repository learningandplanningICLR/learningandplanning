# This file contains a few testing states sorted by the distance from the solution
import numpy as np


def get_test_states(dim_room, num_boxes):
    global test_states
    key = dim_room + (num_boxes,)
    if key in test_states:
        test_states_onehot = []
        for state in test_states[key]:
            onehot = np.zeros(shape=dim_room + (7,), dtype=np.uint8)
            for i in range(dim_room[0]):
                for j in range(dim_room[1]):
                    surfaces_id = state[i][j]
                    onehot[i, j, surfaces_id] = 1
            test_states_onehot.append(onehot)

        return test_states_onehot
    else:
        return []


test_states = dict()

test_states_8_8_2 = [
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 4, 2, 0],
     [0, 0, 2, 1, 1, 4, 5, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 3, 0],
     [0, 0, 2, 4, 5, 1, 1, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 2, 0, 0, 0],
     [0, 2, 1, 1, 0, 0, 0, 0],
     [0, 0, 4, 4, 0, 0, 0, 0],
     [0, 0, 5, 1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 4, 1, 2, 0, 0, 0],
     [0, 2, 1, 1, 0, 0, 0, 0],
     [0, 0, 1, 4, 0, 0, 0, 0],
     [0, 0, 5, 1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
]

test_states[(8, 8, 2)] = test_states_8_8_2

# 8x8x1
test_states_8_8_1 = [
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0],
     [0, 0, 2, 1, 1, 4, 5, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0],
     [0, 0, 2, 4, 5, 1, 1, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 0, 0, 0],
     [0, 2, 1, 1, 0, 0, 0, 0],
     [0, 0, 4, 1, 0, 0, 0, 0],
     [0, 0, 5, 1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 4, 1, 1, 0, 0, 0],
     [0, 2, 1, 1, 0, 0, 0, 0],
     [0, 0, 1, 1, 0, 0, 0, 0],
     [0, 0, 5, 1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0]],
]

test_states[(8, 8, 1)] = test_states_8_8_1

# 10x10x1
test_states_10_10_1 = [
    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 2, 1, 1, 4, 5, 0, 0, 0],
     [0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 5, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 4, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 2, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 5, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 1, 1, 4, 1, 1, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 1, 1, 2, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    #
    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 5, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
     [0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
     [0, 0, 0, 4, 1, 1, 1, 1, 2, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
]

test_states[(10, 10, 1)] = test_states_10_10_1
